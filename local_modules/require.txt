AboutWindow/Views/RootView.web.js:const View = require('../../Views/View.web')
AboutWindow/Views/ModalStandaloneAboutView.web.js:const RootView = require('./RootView.web')
AboutWindow/Views/ModalStandaloneAboutView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Animation/Vendor/velocity.js:			throw new Error("Velocity: IE8 and below require jQuery to be loaded before Velocity.");
Animation/Vendor/velocity.js:				/* If duration is not defined, return the actual time required for completing this animation. Otherwise, return a closure that holds the
Animation/Vendor/velocity.js:									/* Opacified elements are required to have their zoom property set to a non-zero value. */
Animation/Vendor/velocity.js:							/* With all other browsers, normalization is not required; return the same values that were passed in. */
Animation/Vendor/velocity.js:					/* Certain browsers require an SVG transform to be applied as an attribute. (Otherwise, application via CSS is preferable due to 3D support.) */
Animation/Vendor/velocity.js:					 numerical and therefore do not require normalization extraction. */
Animation/Vendor/velocity.js:				/* Certain browsers require that SVG transforms be applied as an attribute. However, the SVG transform attribute takes a modified version of CSS's transform string
Animation/Vendor/velocity.js:							 reduce the opts checking logic required inside the redirect. */
Animation/Vendor/velocity.js:				 (and thus requires jQuery element creation, which we avoid since its overhead includes DOM querying). */
Animation/Vendor/velocity.js:							/* Operator logic must be performed last since it requires unit-normalized start and end values. */
CcyConversionRates/Controller.js:const EventEmitter = require('events')
CcyConversionRates/Controller.js:const Currencies = require('./Currencies')
CcyConversionRates/Currencies.js:let monero_config = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
CcyConversionRates/Currencies.js:let monero_amount_format_utils = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils')
CcyConversionRates/Currencies.js:const JSBigInt = require('../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger
CcyConversionRates/Currencies.js:	let requiredNumberOfZeroes = currency_unitsForDisplay - component_2_str_length
CcyConversionRates/Currencies.js:	if (requiredNumberOfZeroes > 0) {
CcyConversionRates/Currencies.js:		for (var i = 0 ; i < requiredNumberOfZeroes ; i++) {
Concurrency/BackgroundTaskExecutor_Interface.js:const uuidV1 = require('uuid/v1')
Concurrency/BackgroundTaskExecutor.withWorkers.Example.js:const BackgroundTaskExecutor_Interface = require('./BackgroundTaskExecutor_Interface')
Concurrency/BackgroundTaskExecutor.withWorkers.Example.js:		// This was left to the subclasser because webpack does not play well with dynamic requires
Concurrency/ipc.worker.js:const shared_bg_ipc = require('./shared_bg_ipc')
Contacts/Models/Contact.js:const EventEmitter = require('events')
Contacts/Models/Contact.js:const Emojis = require('../../Emoji/emoji_set').Emojis
Contacts/Models/Contact.js:const persistable_object_utils = require('../../DocumentPersister/persistable_object_utils')
Contacts/Models/Contact.js:const contact_persistence_utils = require('./contact_persistence_utils')
Contacts/Models/Contact.js:const monero_paymentID_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_paymentID_utils')
Contacts/Models/Contact.js:const monero_requestURI_utils = require('../../MoneroUtils/monero_requestURI_utils')
Contacts/Models/Contact.js:const QRCode = require('qrcode')
Contacts/Models/contact_persistence_utils.js:const persistable_object_utils = require('../../DocumentPersister/persistable_object_utils')
Contacts/Controllers/ContactsListController.js:const ListBaseController = require('../../Lists/Controllers/ListBaseController')
Contacts/Controllers/ContactsListController.js:const Contact = require('../Models/Contact')
Contacts/Controllers/ContactsListController.js:const contact_persistence_utils = require('../Models/contact_persistence_utils')
Contacts/Views/ContactsTabContentView.Lite.web.js:const ContactsTabContentView_Base = require('./ContactsTabContentView_Base.web')
Contacts/Views/ContactsTabContentView.Lite.web.js:const ContactsDownloadAppEmptyScreenView = require('./ContactsDownloadAppEmptyScreenView.Lite.web')
Contacts/Views/ContactsListView.web.js:const View = require('../../Views/View.web')
Contacts/Views/ContactsListView.web.js:const ListView = require('../../Lists/Views/ListView.web')
Contacts/Views/ContactsListView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Contacts/Views/ContactsListView.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
Contacts/Views/ContactsListView.web.js:const ContactsListCellView = require('./ContactsListCellView.web')
Contacts/Views/ContactsListView.web.js:const ContactDetailsView = require('./ContactDetailsView.web')
Contacts/Views/ContactsListView.web.js:const AddContactFromContactsTabView = require('./AddContactFromContactsTabView.web')
Contacts/Views/ContactsListView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Contacts/Views/ContactDetailsView.web.js:const View = require('../../Views/View.web')
Contacts/Views/ContactDetailsView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Contacts/Views/ContactDetailsView.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
Contacts/Views/ContactDetailsView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Contacts/Views/ContactDetailsView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Contacts/Views/ContactDetailsView.web.js:const ContactQRDisplayModalView = require('./ContactQRDisplayModalView.web')
Contacts/Views/ContactDetailsView.web.js:				throw self.constructor.name + " requires a self.options.record"
Contacts/Views/ContactDetailsView.web.js:						const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Contacts/Views/ContactDetailsView.web.js:						const EditContactFromContactsTabView = require('./EditContactFromContactsTabView.web')
Contacts/Views/EditContactFromContactsTabView.web.js:const ContactFormView = require('../../Contacts/Views/ContactFormView.web')
Contacts/Views/EditContactFromContactsTabView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Contacts/Views/EditContactFromContactsTabView.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
Contacts/Views/EditContactFromContactsTabView.web.js:const monero_paymentID_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_paymentID_utils')
Contacts/Views/EditContactFromContactsTabView.web.js:				throw self.constructor.name + " requires an options.contact"
Contacts/Views/ContactQRDisplayModalView.web.js:const View = require('../../Views/View.web')
Contacts/Views/ContactQRDisplayModalView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Contacts/Views/ContactQRDisplayModalView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Contacts/Views/ContactQRDisplayModalView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Contacts/Views/AddContactView.web.js:const ContactFormView = require('./ContactFormView.web')
Contacts/Views/AddContactView.web.js:const monero_paymentID_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_paymentID_utils')
Contacts/Views/AddContactView.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
Contacts/Views/AddContactView.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
Contacts/Views/AddContactView.web.js:const jsQR = require('jsqr')
Contacts/Views/AddContactView.web.js:const monero_requestURI_utils = require('../../MoneroUtils/monero_requestURI_utils')
Contacts/Views/ContactsTabContentView.web.js:const ContactsTabContentView_Base = require('./ContactsTabContentView_Base.web')
Contacts/Views/ContactsTabContentView.web.js:			const ContactsListView = require('./ContactsListView.web')
Contacts/Views/AddContactFromOtherTabView.web.js:const AddContactView = require('../../Contacts/Views/AddContactView.web')
Contacts/Views/ContactFormView.web.js:const View = require('../../Views/View.web')
Contacts/Views/ContactFormView.web.js:const EmojiPickerControlView = require('../../Emoji/Views/EmojiPickerControlView.web')
Contacts/Views/ContactFormView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Contacts/Views/ContactFormView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Contacts/Views/ContactFormView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Contacts/Views/ContactFormView.web.js:const emoji_selection = require('../../Emoji/emoji_selection')
Contacts/Views/AddContactFromSendTabView.web.js:const AddContactFromOtherTabView = require('../../Contacts/Views/AddContactFromOtherTabView.web')
Contacts/Views/AddContactFromSendTabView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Contacts/Views/AddContactFromSendTabView.web.js:const monero_openalias_utils = require('../../OpenAlias/monero_openalias_utils')
Contacts/Views/AddContactFromSendTabView.web.js:				throw self.constructor.name + " requires a self.mockedTransaction" 
Contacts/Views/ContactsListCellView.web.js:const ListCellView = require('../../Lists/Views/ListCellView.web')
Contacts/Views/ContactsListCellView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Contacts/Views/ContactsListCellView.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
Contacts/Views/ContactsListCellView.web.js:const emoji_web = require('../../Emoji/emoji_web')
Contacts/Views/ContactsListCellView.web.js:const Views__cssRules = require('../../Views/cssRules.web')
Contacts/Views/AddContactFromContactsTabView.web.js:const AddContactView = require('../../Contacts/Views/AddContactView.web')
Contacts/Views/AddContactFromContactsTabView.web.js:			const ContactDetailsView = require('./ContactDetailsView.web')
Contacts/Views/ContactsDownloadAppEmptyScreenView.Lite.web.js:const View = require('../../Views/View.web')
Contacts/Views/ContactsDownloadAppEmptyScreenView.Lite.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
Contacts/Views/ContactsTabContentView_Base.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
DocumentPersister/BackgroundDocumentPersister.Files.child.js:const child_ipc = require('../Concurrency/ipc.electron.child')
DocumentPersister/BackgroundDocumentPersister.Files.child.js:	throw "BackgroundDocumentPersister.Files.child.js requires argv[2] databaseFileParentDirectory"
DocumentPersister/BackgroundDocumentPersister.Files.child.js:	throw "BackgroundDocumentPersister.Files.child.js requires argv[3] reporting_appVersion"
DocumentPersister/BackgroundDocumentPersister.Files.child.js:const DocumentPersister_Files = require('./DocumentPersister.Files')
DocumentPersister/BackgroundDocumentPersister.Files.child.js:	fs: require('fs')
DocumentPersister/DocumentPersister.InMemory.js:const async = require('async')
DocumentPersister/DocumentPersister.InMemory.js:const DocumentPersister_Interface = require('./DocumentPersister_Interface')
DocumentPersister/persistable_object_utils.js:const uuidV1 = require('uuid/v1')
DocumentPersister/persistable_object_utils.js:const string_cryptor = require('../symmetric_cryptor/symmetric_string_cryptor')
DocumentPersister/BackgroundDocumentPersister.Files.electron.js:const BackgroundTaskExecutor = require('../Concurrency/BackgroundTaskExecutor.electron')
DocumentPersister/BackgroundDocumentPersister.Files.electron.js:			throw self.constructor.name + " requires a databaseFileParentDirectory"
DocumentPersister/BackgroundDocumentPersister.Files.electron.js:		const electron = require('electron')
DocumentPersister/DocumentPersister.SecureStorage.js://const async = require('async')
DocumentPersister/DocumentPersister.SecureStorage.js:const DocumentPersister_Interface = require('./DocumentPersister_Interface')
DocumentPersister/DocumentPersister.Files.js:const async = require('async')
DocumentPersister/DocumentPersister.Files.js:const DocumentPersister_Interface = require('./DocumentPersister_Interface')
DocumentPersister/DocumentPersister.Files.js:				throw "options.userDataAbsoluteFilepath required"
DocumentPersister/DocumentPersister.Files.js:				throw "options.fs required"
Emoji/emoji_selection.js:const Emojis = require('./emoji_set').Emojis
Emoji/emoji_set.js:const emojione = require('./Vendor/emojione.min')
Emoji/emoji_set.js:var emojiDescriptionsByKey = require("./Vendor/emoji.json")
Emoji/emoji_web.js:const emojione = require('./Vendor/emojione.min')
Emoji/emoji_web.js:const emoji_set = require('./emoji_set')
Emoji/emoji_web.js:const Views__cssRules = require('../Views/cssRules.web')
Emoji/Views/EmojiPickerPopoverContentView.web.js:const View = require('../../Views/View.web')
Emoji/Views/EmojiPickerPopoverContentView.web.js:const emoji_set = require('../emoji_set')
Emoji/Views/EmojiPickerPopoverContentView.web.js:const emoji_web = require('../emoji_web')
Emoji/Views/EmojiPickerPopoverContentView.web.js:const Views__cssRules = require('../../Views/cssRules.web')
Emoji/Views/EmojiPickerControlView.web.js:const Animate = require('velocity-animate')
Emoji/Views/EmojiPickerControlView.web.js:const View = require('../../Views/View.web')
Emoji/Views/EmojiPickerControlView.web.js:const dom_traversal = require('../../Views/dom_traversal.web')
Emoji/Views/EmojiPickerControlView.web.js:const EmojiPickerPopoverView = require('./EmojiPickerPopoverView.web')
Emoji/Views/EmojiPickerControlView.web.js:const emoji_web = require('../emoji_web')
Emoji/Views/EmojiPickerControlView.web.js:const Views__cssRules = require('../../Views/cssRules.web')
Emoji/Views/EmojiPickerPopoverView.web.js:const View = require('../../Views/View.web')
Emoji/Views/EmojiPickerPopoverView.web.js:const EmojiPickerPopoverContentView = require('./EmojiPickerPopoverContentView.web')
Exchange/Javascript/index.js:const axios = require("axios");
Exchange/Javascript/index.js://const fetch = require("fetch");
Exchange/Javascript/ExchangeFunctions.js://const http = require('http');
Exchange/Javascript/ExchangeFunctions.js:// const { URL } = require('url');
Exchange/Controllers/ContactsListController.js:const ListBaseController = require('../../Lists/Controllers/ListBaseController')
Exchange/Controllers/ContactsListController.js:const Contact = require('../Models/Contact')
Exchange/Controllers/ContactsListController.js:const contact_persistence_utils = require('../Models/contact_persistence_utils')
Exchange/Views/ExchangeContentView.web.js:const Utils = require('../../Exchange/Javascript/ExchangeUtilityFunctions');
Exchange/Views/ExchangeContentView.web.js:const ExchangeLibrary = require('mymonero-exchange');
Exchange/Views/ExchangeContentView.web.js:const ValidationLibrary = require('wallet-address-validator');
Exchange/Views/ExchangeContentView.web.js:const Listeners = require('../../Exchange/Javascript/ExchangeListeners');
Exchange/Views/ExchangeContentView.web.js:const View = require('../../Views/View.web');
Exchange/Views/ExchangeContentView.web.js:const ListView = require('../../Lists/Views/ListView.web');
Exchange/Views/ExchangeContentView.web.js:const emoji_web = require('../../Emoji/emoji_web');
Exchange/Views/ExchangeContentView.web.js:const ExchangeFunctions = require('../Javascript/ExchangeFunctions');
Exchange/Views/ExchangeContentView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Exchange/Views/ExchangeContentView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Exchange/Views/ExchangeContentView.web.js:const commonComponents_tooltips = require('../../MMAppUICommonComponents/tooltips.web')
Exchange/Views/ExchangeContentView.web.js:const WalletsSelectView = require('../../WalletsList/Views/WalletsSelectView.web')
Exchange/Views/ExchangeContentView.web.js:const fs = require('fs');
Exchange/Views/ExchangeContentView.web.js://const commonComponents_contactPicker = require('../../MMAppUICommonComponents/contactPicker.web')
Exchange/Views/ExchangeContentView.web.js:const jsQR = require('jsqr')
Exchange/Views/ExchangeContentView.web.js:const monero_requestURI_utils = require('../../MoneroUtils/monero_requestURI_utils')
Exchange/Views/ExchangeContentView.web.js:const JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger // important: grab defined export
Exchange/Views/ExchangeContentView.web.js:const monero_sendingFunds_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_sendingFunds_utils')
Exchange/Views/ExchangeContentView.web.js:const monero_openalias_utils = require('../../OpenAlias/monero_openalias_utils')
Exchange/Views/ExchangeContentView.web.js:const monero_config = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
Exchange/Views/ExchangeContentView.web.js:const monero_amount_format_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils')
Exchange/Views/ExchangeContentView.web.js:const documents = require('../../DocumentPersister/DocumentPersister_Interface.js');
Exchange/Views/ExchangeContentView.web.js:const ListBaseController = require('../../Lists/Controllers/ListBaseController')
Exchange/Views/ExchangeContentView.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
Exchange/Views/ExchangeContentView.web.js:            const Utils = require('../../Exchange/Javascript/ExchangeUtilityFunctions');
Exchange/Views/ExchangeContentView.web.js:            const ExchangeLibrary = require('mymonero-exchange');
Exchange/Views/ExchangeContentView.web.js:            const ExchangeUtils = require('../Javascript/ExchangeUtilityFunctions');
Exchange/Views/ExchangeContentView.web.js:            const ValidationLibrary = require('wallet-address-validator');
Exchange/Views/ExchangeContentView.web.js:	{ // provided for convenience mainly so consumers don't have to require monero_utils
Exchange/Views/ExchangeContentView.web.js:	{ // provided for convenience mainly so consumers don't have to require monero_utils
Exchange/Views/ExchangeContentView.web.js:	{ // provided for convenience mainly so consumers don't have to require monero_utils
Exchange/Views/ExchangeTabContentView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Exchange/Views/ExchangeTabContentView.web.js:const ExchangeContentView = require('./ExchangeContentView.web')
Exchange/Views/ExchangeScript.js:    let validate = require('bitcoin-address-validation');
Exchange/Views/ExchangeScript.js:    let Utils = require('../../Exchange/Javascript/ExchangeUtilityFunctions');
Exchange/Views/ExchangeScript.js:    let ExchangeLibrary = require('mymonero-exchange');
Exchange/Views/ExchangeScript.js:    let Listeners = require('../../Exchange/Javascript/ExchangeListeners');
FilesystemUI/FilesystemUI.browser.js:const FilesystemUI_Abstract = require('./FilesystemUI_Abstract')
FilesystemUI/FilesystemUI.browser.js:		document.body.appendChild(link); // Required for FF
FilesystemUI/FilesystemUI.electron.js:const fs = require('fs')
FilesystemUI/FilesystemUI.electron.js:const FilesystemUI_Abstract = require('./FilesystemUI_Abstract')
FilesystemUI/FilesystemUI.electron.js:		const remote = require('electron').remote
FilesystemUI/FilesystemUI.electron.js:		const remote = require('electron').remote
FilesystemUI/FilesystemUI.electron.js:		const remote = require('electron').remote
HostedMoneroAPIClient/BackgroundResponseParser.web.js:const response_parser_utils = require('../mymonero_libapp_js/mymonero-core-js/hostAPI/response_parser_utils')
HostedMoneroAPIClient/BackgroundResponseParser.web.js:const monero_keyImage_cache_utils = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_keyImage_cache_utils')
HostedMoneroAPIClient/HostedMoneroAPIClient.Lite.js:const HostedMoneroAPIClient_Base = require('./HostedMoneroAPIClient_Base')
HostedMoneroAPIClient/HostedMoneroAPIClient.Full.js:const HostedMoneroAPIClient_Base = require('./HostedMoneroAPIClient_Base')
HostedMoneroAPIClient/BackgroundResponseParser.electron.main.js:const { ipcMain } = require('electron')
HostedMoneroAPIClient/BackgroundResponseParser.electron.main.js:const response_parser_utils = require('../mymonero_libapp_js/mymonero-core-js/hostAPI/response_parser_utils')
HostedMoneroAPIClient/BackgroundResponseParser.electron.main.js:const monero_keyImage_cache_utils = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_keyImage_cache_utils')
HostedMoneroAPIClient/BackgroundResponseParser.electron.main.js:const coreBridgeLoading_promise = require('../MoneroUtils/MyMoneroLibAppBridge_Singleton.electron')
HostedMoneroAPIClient/BackgroundResponseParser.electron.renderer.js:const {ipcRenderer} = require('electron')
HostedMoneroAPIClient/BackgroundResponseParser.electron.renderer.js:const uuidV1 = require('uuid/v1')
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:const async = require('async')
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:const JSBigInt = require('../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger // important: grab defined export
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:const monero_config = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:const net_service_utils = require('../mymonero_libapp_js/mymonero-core-js/hostAPI/net_service_utils')
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:const config__MyMonero = require('./config__MyMonero')
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:			throw `${self.constructor.name} requires an options.request_conformant_module such as require('request' / 'xhr')`
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:				throw `${self.constructor.name} requires options.appUserAgent_product`
HostedMoneroAPIClient/HostedMoneroAPIClient_Base.js:				throw `${self.constructor.name} requires options.appUserAgent_version`
InfoDisclosingView/Views/InfoDisclosingView.web.js:const Animate = require('velocity-animate')
InfoDisclosingView/Views/InfoDisclosingView.web.js:const View = require('../../Views/View.web')
InfoDisclosingView/Views/InfoDisclosingView.web.js:				throw `${self.constructor.name} requires a self.previewView`
InfoDisclosingView/Views/InfoDisclosingView.web.js:				throw `${self.constructor.name} requires a self.disclosedView`
Lists/Controllers/ListBaseController.js:const EventEmitter = require('events')
Lists/Controllers/ListBaseController.js:const async = require('async')
Lists/Views/ListCellView.web.js:const View = require('../../Views/View.web')
Lists/Views/ListCustomSelectView.web.js:const Views__cssRules = require('../../Views/cssRules.web')
Lists/Views/ListCustomSelectView.web.js:const CustomSelectView = require('../../SelectView/CustomSelectView.web')
Lists/Views/ListCustomSelectView.web.js:				throw `${self.constructor.name} requires options.listController`
Lists/Views/ListCustomSelectView.web.js:				throw `${self.constructor.name} requires options.cellContentsViewClass`
Lists/Views/ListCustomSelectView.web.js:				throw `${self.constructor.name} requires options.cellView_height_fn`
Lists/Views/ListView.web.js:const View = require('../../Views/View.web')
Lists/Views/ListView.web.js:const ListCellView = require('./ListCellView.web')
Lists/Views/ListView.web.js:				throw self.constructor.name + " requires an options.listController"
Lists/Views/ListView.web.js:				throw self.constructor.name + " requires record to pushRecordDetailsView"
Lists/Views/ListView.web.js:			throw self.constructor.name + " requires navigationController to pushRecordDetailsView"
Locale/Locale.browser.js:const Locale_Abstract = require('./Locale_Abstract')
MMAppRendererSetup/renderer_setup_utils.js:	exceptionReporterOptions_requiredModule, 
MMAppRendererSetup/renderer_setup_utils.js:	// const Raven = require('raven') // we're using the Node.JS raven package here for now because of https://github.com/getsentry/raven-js/issues/812 … any downsides?
MMAppRendererSetup/renderer_setup_utils.js:	// const options = exceptionReporterOptions_requiredModule(appVersion, exceptionReporting_processName)
MMAppRendererSetup/renderer_setup.electron.js:const renderer_setup_utils = require('./renderer_setup_utils')
MMAppRendererSetup/renderer_setup.electron.js:		// const remote__electron = require('electron').remote
MMAppRendererSetup/renderer_setup.electron.js:		// 	require("../reporting/exceptionReporterOptions.electron"),
MMAppRendererSetup/renderer_setup.electron.js:	// const {crashReporter} = require('electron')
MMAppRendererSetup/renderer_setup.electron.js:	// const options_template = require('../reporting/crashReporterOptions.electron')
MMAppRendererSetup/renderer_setup.electron.js:		const remote__electron = require('electron').remote;
MMAppRendererSetup/renderer_setup.browser.js:const renderer_setup_utils = require('./renderer_setup_utils')
MMAppUICommonComponents/hoverableCells.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/forms.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/forms.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/forms.web.js:const commonComponents_tables = require('./tables.web')
MMAppUICommonComponents/forms.web.js:	{ // lazy require to avoid usage in e.g. electron; hopefully the perf hit will not be noticed
MMAppUICommonComponents/forms.web.js:			LocalVendor_ScrollPositionEndFixed_Animate = require('../Animation/Vendor/velocity')
MMAppUICommonComponents/switchToggles.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/switchToggles.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/tables.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/tables.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/tables.web.js:const activityIndicators = require('./activityIndicators.web')
MMAppUICommonComponents/tables.web.js:const commonComponents_forms = require('./forms.web')
MMAppUICommonComponents/emptyScreens.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/emptyScreens.web.js:const emoji_web = require('../Emoji/emoji_web')
MMAppUICommonComponents/emptyScreens.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/contactPicker.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/contactPicker.web.js:const commonComponents_forms = require('./forms.web')
MMAppUICommonComponents/contactPicker.web.js:const emoji_web = require('../Emoji/emoji_web')
MMAppUICommonComponents/contactPicker.web.js:		throw "New_contactPickerLayer requires a contactsListController"
MMAppUICommonComponents/contactPicker.Lite.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/contactPicker.Lite.web.js:const commonComponents_forms = require('./forms.web')
MMAppUICommonComponents/ccySelect.web.js:let Currencies = require('../CcyConversionRates/Currencies')
MMAppUICommonComponents/navigationBarButtons.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/navigationBarButtons.web.js:const BarButtonBaseView = require('../StackNavigation/Views/BarButtonBaseView.web')
MMAppUICommonComponents/navigationBarButtons.web.js:const commonComponents_hoverableCells = require('./hoverableCells.web')
MMAppUICommonComponents/activityIndicators.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/labeledRangeInputs.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/labeledRangeInputs.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/actionButtons.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/actionButtons.web.js:const commonComponents_hoverableCells = require('./hoverableCells.web')
MMAppUICommonComponents/walletIcons.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/walletMnemonicBox.web.js:const uuidV1 = require('uuid/v1')
MMAppUICommonComponents/walletMnemonicBox.web.js:const View = require('../Views/View.web')
MMAppUICommonComponents/walletMnemonicBox.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/walletMnemonicBox.web.js:const numberOfMnemonicWordsRequiredForVerification = 7
MMAppUICommonComponents/walletMnemonicBox.web.js:exports.numberOfMnemonicWordsRequiredForVerification = numberOfMnemonicWordsRequiredForVerification
MMAppUICommonComponents/walletMnemonicBox.web.js:	const alphabetized_necessary_mnemonicWords = mnemonicWords.slice(0, numberOfMnemonicWordsRequiredForVerification).sort()
MMAppUICommonComponents/tooltips.web.js:const Opentip = require('./Vendor/opentip-native.min.js')
MMAppUICommonComponents/tooltips.web.js:const commonComponents_tables = require('./tables.web')
MMAppUICommonComponents/tooltips.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/amounts.web.js:// const View = require('../Views/View.web')
MMAppUICommonComponents/amounts.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/amounts.web.js:const commonComponents_tables = require('./tables.web')
MMAppUICommonComponents/amounts.web.js:const commonComponents_forms = require('./forms.web')
MMAppUICommonComponents/amounts.web.js:const commonComponents_ccySelect = require('./ccySelect.web')
MMAppUICommonComponents/amounts.web.js:const monero_config = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
MMAppUICommonComponents/walletColorPicker.web.js:const commonComponents_walletIcons = require('./walletIcons.web')
MMAppUICommonComponents/walletColorPicker.web.js:const Views__cssRules = require('../Views/cssRules.web')
MMAppUICommonComponents/walletColorPicker.web.js:const commonComponents_hoverableCells = require('./hoverableCells.web')
MMAppUICommonComponents/walletColorPicker.web.js:	const View = require('../Views/View.web')
MainWindow/Models/index_context.browser.js:const TXTRecordResolver = require("../../OpenAlias/TXTResolver.web")
MainWindow/Models/index_context.browser.js:		throw "app required"
MainWindow/Models/index_context.browser.js:		// using module+require instead of module_path+string b/c browserify/webpack can't handle dynamic requires
MainWindow/Models/index_context.browser.js:			module: require("../../Pasteboard/Pasteboard.browser"),
MainWindow/Models/index_context.browser.js:			module: require("../../URLBrowser/URLBrowser.browser"),
MainWindow/Models/index_context.browser.js:			module: require("../../FilesystemUI/FilesystemUI.browser"),
MainWindow/Models/index_context.browser.js:			module: require("../../WindowDialogs/WindowDialogs.browser"),
MainWindow/Models/index_context.browser.js:			module: require("../../CcyConversionRates/Controller"),
MainWindow/Models/index_context.browser.js:			module: require("../../Locale/Locale.browser"),
MainWindow/Models/index_context.browser.js:			module: require("../../symmetric_cryptor/BackgroundStringCryptor.noOp"),
MainWindow/Models/index_context.browser.js:			module: require("../../DocumentPersister/DocumentPersister.SecureStorage"),
MainWindow/Models/index_context.browser.js:			module: require("../../HostedMoneroAPIClient/BackgroundResponseParser.web"),
MainWindow/Models/index_context.browser.js:			module: require("../../HostedMoneroAPIClient/HostedMoneroAPIClient.Lite"),
MainWindow/Models/index_context.browser.js:				request_conformant_module: require('xhr') 
MainWindow/Models/index_context.browser.js:			module: require("../../OpenAlias/OpenAliasResolver"),
MainWindow/Models/index_context.browser.js:			module: require("../../Theme/ThemeController"),
MainWindow/Models/index_context.browser.js:			module: require("../../Passwords/Controllers/PasswordController.Lite"),
MainWindow/Models/index_context.browser.js:			module: require("../../Settings/Controllers/SettingsController"),
MainWindow/Models/index_context.browser.js:			module: require("../../UserIdle/UserIdleInWindowController"),
MainWindow/Models/index_context.browser.js:			module: require("../../WalletsList/Controllers/WalletsListController.Lite"),
MainWindow/Models/index_context.browser.js:			module: require("../../WalletAppCoordinator/WalletAppCoordinator"),
MainWindow/Models/index_context.browser.js:			module: require("../Controllers/ExceptionAlerting.browser.web.js"),
MainWindow/Models/index_context.browser.js:	return require("../../runtime_context/runtime_context").NewHydratedContext(
MainWindow/Controllers/MainWindowController.electron.main.js:const electron = require('electron')
MainWindow/Controllers/ExceptionAlerting.browser.web.js:const Views__cssRules = require('../../Views/cssRules.web')
MainWindow/Views/RootView_Base.web.js:const View = require('../../Views/View.web')
MainWindow/Views/RootView_Base.web.js:const commonComponents_assetPreloader = require('../../MMAppUICommonComponents/assetPreloader')
MainWindow/Views/RootView_Base.web.js:			throw `${self.constructor.name} requires a self.context.platformSpecific_RootTabBarAndContentView`
MainWindow/Views/RootView_Base.web.js:		const PasswordEntryViewController = require('../../Passwords/Controllers/PasswordEntryViewController.web')
MainWindow/Views/RootView_Base.web.js:		const ConnectivityMessageBarView = require('./ConnectivityMessageBarView.web')
MainWindow/Views/index.browser.html:			<!-- script-src of unsafe-eval required to load wasm files at present but actual eval is disabled in renderer_setup_utils -->
MainWindow/Views/RootView.Full.web.js:const RootView_Base = require('./RootView_Base.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:const RootTabBarAndContentView_Base = require('./RootTabBarAndContentView_Base.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:			const WalletsTabContentView = require('../../WalletsList/Views/WalletsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:			const SendTabContentView = require('../../SendFundsTab/Views/SendTabContentView.Full.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:			const RequestTabContentView = require('../../RequestFunds/Views/RequestTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:			const ContactsTabContentView = require('../../Contacts/Views/ContactsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:			const SettingsTabContentView = require('../../Settings/Views/SettingsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.FullDeleteCandidate.web.js:			const ExchangeTabContentView = require('../../Exchange/Views/ExchangeUtilityFunctions.web')
MainWindow/Views/index.browser.js:	const setup_utils = require('../../MMAppRendererSetup/renderer_setup.browser')
MainWindow/Views/index.browser.js:	require('../../mymonero_libapp_js/libapp_js/MyMoneroLibAppBridge')({}).then(function(coreBridge_instance) // we can just use this directly in the browser version
MainWindow/Views/index.browser.js:		const context = require('../Models/index_context.browser').NewHydratedContext({
MainWindow/Views/index.browser.js:			nettype: require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/nettype').network_type.MAINNET, // critical setting
MainWindow/Views/index.browser.js:			platformSpecific_RootTabBarAndContentView: require('./RootTabBarAndContentView.browser.web'), // slightly messy place to put this but it works
MainWindow/Views/index.browser.js:				const emoji_web = require('../../Emoji/emoji_web')
MainWindow/Views/index.browser.js:				var attachFastClick = require('fastclick')
MainWindow/Views/index.browser.js:				const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
MainWindow/Views/index.browser.js:			const RootView = require('../Views/RootView.Lite.web') // electron uses .web files as it has a web DOM
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:const RootTabBarAndContentView_Base = require('./RootTabBarAndContentView_Base.web')
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:			const WalletsTabContentView = require('../../WalletsList/Views/WalletsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:			const SendTabContentView = require('../../SendFundsTab/Views/SendTabContentView.Lite.web')
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:			const RequestTabContentView = require('../../RequestFunds/Views/RequestTabContentView.Lite.web')
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:			const ContactsTabContentView = require('../../Contacts/Views/ContactsTabContentView.Lite.web')
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:			const ExchangeTabContentView = require('../../Exchange/Views/ExchangeTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.Lite.web.js:			const SettingsTabContentView = require('../../Settings/Views/SettingsTabContentView.web')
MainWindow/Views/ConnectivityMessageBarView.web.js:const View = require('../../Views/View.web')
MainWindow/Views/RootTabBarAndContentView_Base.web.js:const TabBarAndContentView = require('../../TabBarView/TabBarAndContentView.web')
MainWindow/Views/RootFooterView.web.js:const View = require('../../Views/View.web')
MainWindow/Views/RootTabBarAndContentView.Full.web.js:const RootTabBarAndContentView_Base = require('./RootTabBarAndContentView_Base.web')
MainWindow/Views/RootTabBarAndContentView.Full.web.js:			const WalletsTabContentView = require('../../WalletsList/Views/WalletsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.Full.web.js:			const SendTabContentView = require('../../SendFundsTab/Views/SendTabContentView.Full.web')
MainWindow/Views/RootTabBarAndContentView.Full.web.js:			const RequestTabContentView = require('../../RequestFunds/Views/RequestTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.Full.web.js:			const ContactsTabContentView = require('../../Contacts/Views/ContactsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.Full.web.js:			const SettingsTabContentView = require('../../Settings/Views/SettingsTabContentView.web')
MainWindow/Views/RootTabBarAndContentView.browser.web.js:const RootTabBarAndContentView_Lite = require('./RootTabBarAndContentView.Lite.web')
MainWindow/Views/RootView.Lite.web.js:const RootView_Base = require('./RootView_Base.web')
MainWindow/Views/RootView.Lite.web.js:const RootFooterView = require('./RootFooterView.web')
MainWindow/Views/RootView.Lite.web.js:		const PasswordEntryViewController = require('../../Passwords/Controllers/PasswordEntryViewController.web')
Menus/MenuControllerController.renderer.js:const {ipcRenderer} = require('electron')
Menus/MenuController.electron.js:const {Menu, shell, ipcMain} = require('electron')
Menus/MenuController.electron.js:const MenuController_Abstract = require('./MenuController_Abstract')
Menus/MenuController.electron.js:							const shell = require('electron').shell
Menus/MenuController_Abstract.js:const EventEmitter = require('events')
MoneroUtils/monero_utils.electron.web.js:const fn_names = require('./__bridged_fns_spec.electron').bridgedFn_names;
MoneroUtils/monero_utils.electron.web.js:			const {ipcRenderer} = require('electron')
MoneroUtils/monero_utils.electron.web.js:		// Require file again except on the main process ...
MoneroUtils/monero_utils.electron.web.js:		const remoteModule = require('electron').remote.require("../MoneroUtils/__IPCSafe_remote_monero_utils.electron");
MoneroUtils/__bridged_fns_spec.electron.js:	// "async__send_funds", // this is not to be bridged via synch IPC since it requires async bridging
MoneroUtils/MyMoneroLibAppBridge_Singleton.electron.js:	globalObject[globalPromiseKey] = require('../mymonero_libapp_js/libapp_js/MyMoneroLibAppBridge')({asmjs: false})
MoneroUtils/__IPCSafe_remote_monero_utils.electron.js:// NOTE: You will never need to require this file directly. See / use monero_utils.js.
MoneroUtils/__IPCSafe_remote_monero_utils.electron.js:const ENVIRONMENT_IS_NODE = typeof process==="object" && process.browser !== true && typeof require==="function" && ENVIRONMENT_IS_WORKER == false; // we want this to be true for Electron but not for a WebView
MoneroUtils/__IPCSafe_remote_monero_utils.electron.js:const fn_names = require('./__bridged_fns_spec.electron').bridgedFn_names;
MoneroUtils/__IPCSafe_remote_monero_utils.electron.js:	const {ipcMain} = require('electron')
MoneroUtils/__IPCSafe_remote_monero_utils.electron.js:const coreBridgeLoading_promise = require('./MyMoneroLibAppBridge_Singleton.electron')
OpenAlias/DNSResolverHandle.node.js:const DNSResolverHandle_Interface = require('./DNSResolverHandle_Interface')
OpenAlias/monero_openalias_utils.js:const monero_config = require('../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
OpenAlias/monero_openalias_utils.js:const openalias_utils = require('./openalias_utils')
OpenAlias/TXTResolver.web.js:const TXTResolver_Interface = require('./TXTResolver_Interface')
OpenAlias/TXTResolver.web.js:const request = require('xhr')
OpenAlias/TXTResolver.electron.renderer.js:const {ipcRenderer} = require('electron')
OpenAlias/TXTResolver.electron.renderer.js:const uuidV1 = require('uuid/v1')
OpenAlias/TXTResolver.electron.renderer.js:const TXTResolver_Interface = require('./TXTResolver_Interface')
OpenAlias/TXTResolver.electron.renderer.js:const DNSResolverHandle = require('./DNSResolverHandle.node')
OpenAlias/TXTResolvingController.electron.main.js:const { Resolver } = require('dns')
OpenAlias/TXTResolvingController.electron.main.js:const { ipcMain } = require('electron')
OpenAlias/TXTResolvingController.electron.main.js:const TXTResolver_Interface = require('./TXTResolver_Interface')
OpenAlias/TXTResolvingController.electron.main.js:const DNSResolverHandle = require('./DNSResolverHandle.node')
OpenAlias/OpenAliasResolver.js:const EventEmitter = require('events')
OpenAlias/OpenAliasResolver.js:const monero_openalias_utils = require('./monero_openalias_utils')
Passwords/tests/tests_context.js:	return require("../../runtime_context/runtime_context").NewHydratedContext(context_object_instantiation_descriptions, initialContext)
Passwords/tests/tests__bootController.js:const tests_config = require('./tests_config.js')
Passwords/tests/tests__bootController.js:const context = require('./tests_context').NewHydratedContext()
Passwords/tests/tests__bootController.js:const async = require('async')
Passwords/tests/tests__bootController.js:	const PasswordController = require('../Controllers/PasswordController')
Passwords/Controllers/PasswordEntryViewController.web.js:const EventEmitter = require('events')
Passwords/Controllers/PasswordEntryViewController.web.js:const PasswordEntryView = require('../Views/PasswordEntryView.web')
Passwords/Controllers/PasswordController_Base.js:const async = require('async')
Passwords/Controllers/PasswordController_Base.js:const EventEmitter = require('events')
Passwords/Controllers/PasswordController_Base.js:const uuidV1 = require('uuid/v1')
Passwords/Controllers/PasswordController_Base.js:const symmetric_string_cryptor = require('../../symmetric_cryptor/symmetric_string_cryptor')
Passwords/Controllers/PasswordController_Base.js:				self.hasBooted = false // require this pw controller to boot
Passwords/Controllers/PasswordController_Base.js:	LockDownAppAndRequirePassword()
Passwords/Controllers/PasswordController_Base.js:			console.warn("⚠️  Asked to LockDownAppAndRequirePassword but no password entered yet.")
Passwords/Controllers/PasswordController_Base.js:		console.log("💬  Will LockDownAppAndRequirePassword")
Passwords/Controllers/PasswordController_Base.js:		// TODO:? do we need to cancel any waiting functions here? not sure it would be possible to have any (unless code fault)…… we'd only deconstruct the booted state and pop the enter pw screen here if we had already booted before - which means there theoretically shouldn't be such waiting functions - so maybe assert that here - which requires hanging onto those functions somehow
Passwords/Controllers/PasswordController_Base.js:					{ // trigger deconstruction of booted state and require password
Passwords/Controllers/PasswordController_Base.js:	// Runtime - Delegation - User having become idle -> teardown booted state and require pw
Passwords/Controllers/PasswordController.Full.js:const PasswordController_Base = require('./PasswordController_Base')
Passwords/Controllers/PasswordController.Lite.js:const PasswordController_Base = require('./PasswordController_Base')
Passwords/Views/EnterNewPasswordView.web.js:const View = require('../../Views/View.web')
Passwords/Views/EnterNewPasswordView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Passwords/Views/EnterNewPasswordView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Passwords/Views/EnterNewPasswordView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Passwords/Views/ForgotPasswordView.web.js:const View = require('../../Views/View.web')
Passwords/Views/ForgotPasswordView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Passwords/Views/ForgotPasswordView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Passwords/Views/ForgotPasswordView.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
Passwords/Views/ForgotPasswordView.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
Passwords/Views/PasswordEntryView.web.js:const View = require('../../Views/View.web')
Passwords/Views/PasswordEntryView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Passwords/Views/PasswordEntryView.web.js:					const EnterExistingPasswordView = require('./EnterExistingPasswordView.web')
Passwords/Views/PasswordEntryView.web.js:					const EnterNewPasswordView = require('./EnterNewPasswordView.web')
Passwords/Views/EnterExistingPasswordView.web.js:const View = require('../../Views/View.web')
Passwords/Views/EnterExistingPasswordView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Passwords/Views/EnterExistingPasswordView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Passwords/Views/EnterExistingPasswordView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Passwords/Views/EnterExistingPasswordView.web.js:const ForgotPasswordView = require('./ForgotPasswordView.web')
Pasteboard/Pasteboard.browser.js:const PasteboardInterface = require('./PasteboardInterface')
Pasteboard/Pasteboard.browser.js:const ClipboardJS = require('./Vendor/clipboard.min.js')
Pasteboard/Vendor/clipboard.min.js:!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.ClipboardJS=e():t.ClipboardJS=e()}(this,function(){return function(n){var o={};function r(t){if(o[t])return o[t].exports;var e=o[t]={i:t,l:!1,exports:{}};return n[t].call(e.exports,e,e.exports,r),e.l=!0,e.exports}return r.m=n,r.c=o,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,n){"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i=function(){function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}}(),a=o(n(1)),c=o(n(3)),u=o(n(4));function o(t){return t&&t.__esModule?t:{default:t}}var l=function(t){function o(t,e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o);var n=function(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}(this,(o.__proto__||Object.getPrototypeOf(o)).call(this));return n.resolveOptions(e),n.listenClick(t),n}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}(o,c.default),i(o,[{key:"resolveOptions",value:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};this.action="function"==typeof t.action?t.action:this.defaultAction,this.target="function"==typeof t.target?t.target:this.defaultTarget,this.text="function"==typeof t.text?t.text:this.defaultText,this.container="object"===r(t.container)?t.container:document.body}},{key:"listenClick",value:function(t){var e=this;this.listener=(0,u.default)(t,"click",function(t){return e.onClick(t)})}},{key:"onClick",value:function(t){var e=t.delegateTarget||t.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new a.default({action:this.action(e),target:this.target(e),text:this.text(e),container:this.container,trigger:e,emitter:this})}},{key:"defaultAction",value:function(t){return s("action",t)}},{key:"defaultTarget",value:function(t){var e=s("target",t);if(e)return document.querySelector(e)}},{key:"defaultText",value:function(t){return s("text",t)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:["copy","cut"],e="string"==typeof t?[t]:t,n=!!document.queryCommandSupported;return e.forEach(function(t){n=n&&!!document.queryCommandSupported(t)}),n}}]),o}();function s(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}t.exports=l},function(t,e,n){"use strict";var o,r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i=function(){function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(t,e,n){return e&&o(t.prototype,e),n&&o(t,n),t}}(),a=n(2),c=(o=a)&&o.__esModule?o:{default:o};var u=function(){function e(t){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),this.resolveOptions(t),this.initSelection()}return i(e,[{key:"resolveOptions",value:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{};this.action=t.action,this.container=t.container,this.emitter=t.emitter,this.target=t.target,this.text=t.text,this.trigger=t.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function(){var t=this,e="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return t.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[e?"right":"left"]="-9999px";var n=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=n+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,c.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=(0,c.default)(this.target),this.copyText()}},{key:"copyText",value:function(){var e=void 0;try{e=document.execCommand(this.action)}catch(t){e=!1}this.handleResult(e)}},{key:"handleResult",value:function(t){this.emitter.emit(t?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=t,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(t){if(void 0!==t){if(!t||"object"!==(void 0===t?"undefined":r(t))||1!==t.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&t.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(t.hasAttribute("readonly")||t.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=t}},get:function(){return this._target}}]),e}();t.exports=u},function(t,e){t.exports=function(t){var e;if("SELECT"===t.nodeName)t.focus(),e=t.value;else if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName){var n=t.hasAttribute("readonly");n||t.setAttribute("readonly",""),t.select(),t.setSelectionRange(0,t.value.length),n||t.removeAttribute("readonly"),e=t.value}else{t.hasAttribute("contenteditable")&&t.focus();var o=window.getSelection(),r=document.createRange();r.selectNodeContents(t),o.removeAllRanges(),o.addRange(r),e=o.toString()}return e}},function(t,e){function n(){}n.prototype={on:function(t,e,n){var o=this.e||(this.e={});return(o[t]||(o[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){var o=this;function r(){o.off(t,r),e.apply(n,arguments)}return r._=e,this.on(t,r,n)},emit:function(t){for(var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),o=0,r=n.length;o<r;o++)n[o].fn.apply(n[o].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),o=n[t],r=[];if(o&&e)for(var i=0,a=o.length;i<a;i++)o[i].fn!==e&&o[i].fn._!==e&&r.push(o[i]);return r.length?n[t]=r:delete n[t],this}},t.exports=n},function(t,e,n){var d=n(5),h=n(6);t.exports=function(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!d.string(e))throw new TypeError("Second argument must be a String");if(!d.fn(n))throw new TypeError("Third argument must be a Function");if(d.node(t))return s=e,f=n,(l=t).addEventListener(s,f),{destroy:function(){l.removeEventListener(s,f)}};if(d.nodeList(t))return a=t,c=e,u=n,Array.prototype.forEach.call(a,function(t){t.addEventListener(c,u)}),{destroy:function(){Array.prototype.forEach.call(a,function(t){t.removeEventListener(c,u)})}};if(d.string(t))return o=t,r=e,i=n,h(document.body,o,r,i);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList");var o,r,i,a,c,u,l,s,f}},function(t,n){n.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},n.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||n.node(t[0]))},n.string=function(t){return"string"==typeof t||t instanceof String},n.fn=function(t){return"[object Function]"===Object.prototype.toString.call(t)}},function(t,e,n){var a=n(7);function i(t,e,n,o,r){var i=function(e,n,t,o){return function(t){t.delegateTarget=a(t.target,n),t.delegateTarget&&o.call(e,t)}}.apply(this,arguments);return t.addEventListener(n,i,r),{destroy:function(){t.removeEventListener(n,i,r)}}}t.exports=function(t,e,n,o,r){return"function"==typeof t.addEventListener?i.apply(null,arguments):"function"==typeof n?i.bind(null,document).apply(null,arguments):("string"==typeof t&&(t=document.querySelectorAll(t)),Array.prototype.map.call(t,function(t){return i(t,e,n,o,r)}))}},function(t,e){if("undefined"!=typeof Element&&!Element.prototype.matches){var n=Element.prototype;n.matches=n.matchesSelector||n.mozMatchesSelector||n.msMatchesSelector||n.oMatchesSelector||n.webkitMatchesSelector}t.exports=function(t,e){for(;t&&9!==t.nodeType;){if("function"==typeof t.matches&&t.matches(e))return t;t=t.parentNode}}}])});
QRScanningUI/QRScanningCameraUIMockView.web.js:const View = require('../Views/View.web')
QRScanningUI/QRScanningCameraUIMockView.web.js:const commonComponents_navigationBarButtons = require('../MMAppUICommonComponents/navigationBarButtons.web')
RequestFunds/Models/FundsRequest.js:const EventEmitter = require('events')
RequestFunds/Models/FundsRequest.js:const persistable_object_utils = require('../../DocumentPersister/persistable_object_utils')
RequestFunds/Models/FundsRequest.js:const fundsRequest_persistence_utils = require('./fundsRequest_persistence_utils')
RequestFunds/Models/FundsRequest.js:const monero_requestURI_utils = require('../../MoneroUtils/monero_requestURI_utils')
RequestFunds/Models/FundsRequest.js:const QRCode = require('qrcode')
RequestFunds/Models/fundsRequest_persistence_utils.js:const persistable_object_utils = require('../../DocumentPersister/persistable_object_utils')
RequestFunds/Controllers/FundsRequestsListController.js:const async = require('async')
RequestFunds/Controllers/FundsRequestsListController.js:const ListBaseController = require('../../Lists/Controllers/ListBaseController')
RequestFunds/Controllers/FundsRequestsListController.js:const FundsRequest = require('../Models/FundsRequest')
RequestFunds/Controllers/FundsRequestsListController.js:const fundsRequest_persistence_utils = require('../Models/fundsRequest_persistence_utils')
RequestFunds/Views/RequestTabContentView_Base.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
RequestFunds/Views/RequestTabContentView.web.js:const RequestTabContentView_Base = require('./RequestTabContentView_Base.web')
RequestFunds/Views/RequestTabContentView.web.js:			const FundsRequestsListView = require('./FundsRequestsListView.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:const View = require('../../Views/View.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:const FundsRequestCellContentsView = require('./FundsRequestCellContentsView.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:const FundsRequestQRDisplayView = require('./FundsRequestQRDisplayView.web')
RequestFunds/Views/FundsRequestDetailsView.web.js:				throw self.constructor.name + " requires a self.options.fundsRequest"
RequestFunds/Views/RequestsDownloadAppEmptyScreenView.Lite.web.js:const View = require('../../Views/View.web')
RequestFunds/Views/RequestsDownloadAppEmptyScreenView.Lite.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
RequestFunds/Views/CreateRequestFormView.web.js:const View = require('../../Views/View.web')
RequestFunds/Views/CreateRequestFormView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
RequestFunds/Views/CreateRequestFormView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
RequestFunds/Views/CreateRequestFormView.web.js:const commonComponents_amounts = require('../../MMAppUICommonComponents/amounts.web')
RequestFunds/Views/CreateRequestFormView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
RequestFunds/Views/CreateRequestFormView.web.js:const commonComponents_contactPicker = require('../../MMAppUICommonComponents/contactPicker.web')
RequestFunds/Views/CreateRequestFormView.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
RequestFunds/Views/CreateRequestFormView.web.js:const WalletsSelectView = require('../../WalletsList/Views/WalletsSelectView.web')
RequestFunds/Views/CreateRequestFormView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
RequestFunds/Views/CreateRequestFormView.web.js:const AddContactFromOtherTabView = require('../../Contacts/Views/AddContactFromOtherTabView.web')
RequestFunds/Views/CreateRequestFormView.web.js:		{ // Tear down components that require us to call their TearDown
RequestFunds/Views/CreateRequestFormView.web.js:			const FundsRequestDetailsView = require('./FundsRequestDetailsView.web')
RequestFunds/Views/FundsRequestsListCellView.web.js:const ListCellView = require('../../Lists/Views/ListCellView.web')
RequestFunds/Views/FundsRequestsListCellView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
RequestFunds/Views/FundsRequestsListCellView.web.js:const commonComponents_walletIcons = require('../../MMAppUICommonComponents/walletIcons.web')
RequestFunds/Views/FundsRequestsListCellView.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
RequestFunds/Views/FundsRequestsListCellView.web.js:const FundsRequestCellContentsView = require('./FundsRequestCellContentsView.web')
RequestFunds/Views/FundsRequestsListView.web.js:const View = require('../../Views/View.web')
RequestFunds/Views/FundsRequestsListView.web.js:const ListView = require('../../Lists/Views/ListView.web')
RequestFunds/Views/FundsRequestsListView.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
RequestFunds/Views/FundsRequestsListView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
RequestFunds/Views/FundsRequestsListView.web.js:const FundsRequestsListCellView = require('./FundsRequestsListCellView.web')
RequestFunds/Views/FundsRequestsListView.web.js:const FundsRequestDetailsView = require('./FundsRequestDetailsView.web')
RequestFunds/Views/FundsRequestsListView.web.js:const FundsRequestQRDisplayView = require('./FundsRequestQRDisplayView.web')
RequestFunds/Views/FundsRequestsListView.web.js:const CreateRequestFormView = require('./CreateRequestFormView.web')
RequestFunds/Views/FundsRequestsListView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
RequestFunds/Views/FundsRequestCellContentsView.web.js:const View = require('../../Views/View.web')
RequestFunds/Views/FundsRequestCellContentsView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
RequestFunds/Views/FundsRequestCellContentsView.web.js:const commonComponents_walletIcons = require('../../MMAppUICommonComponents/walletIcons.web')
RequestFunds/Views/RequestTabContentView.Lite.web.js:const RequestTabContentView_Base = require('./RequestTabContentView_Base.web')
RequestFunds/Views/RequestTabContentView.Lite.web.js:const RequestsDownloadAppEmptyScreenView = require('./RequestsDownloadAppEmptyScreenView.Lite.web')
RequestFunds/Views/FundsRequestQRDisplayView.web.js:const View = require('../../Views/View.web')
RequestFunds/Views/FundsRequestQRDisplayView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
RequestFunds/Views/FundsRequestQRDisplayView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
RequestFunds/Views/FundsRequestQRDisplayView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
RequestFunds/Views/FundsRequestQRDisplayView.web.js:let Currencies = require('../../CcyConversionRates/Currencies')
RequestFunds/Views/FundsRequestQRDisplayView.web.js:				throw self.constructor.name + " requires a self.options.fundsRequest or self.options.record"
SelectView/CustomSelectView.web.js:const View = require('../Views/View.web')
SelectView/CustomSelectView.web.js:const Views__cssRules = require('../Views/cssRules.web')
SelectView/CustomSelectView.web.js:const dom_traversal = require('../Views/dom_traversal.web')
SelectView/CustomSelectView.web.js:			throw `${self.constructor.name}/ConfigureWithRowItems: requires non-nil rowItems`
SendFundsTab/Views/SendTabContentView.Full.web.js:const SendTabContentView_Base = require('./SendTabContentView_Base.web')
SendFundsTab/Views/SendTabContentView.Full.web.js:	_required_rootViewClassModule()
SendFundsTab/Views/SendTabContentView.Full.web.js:		return require('./SendFundsView.Full.web')
SendFundsTab/Views/SendTabContentView_Base.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
SendFundsTab/Views/SendTabContentView_Base.web.js:			const SendFundsView = self._required_rootViewClassModule()
SendFundsTab/Views/SendTabContentView_Base.web.js:	_required_rootViewClassModule()
SendFundsTab/Views/SendTabContentView_Base.web.js:		throw "You must override and implement SendTabContentView_Base/_required_rootViewClassModule"
SendFundsTab/Views/JustSentTransactionDetailsView.web.js:const TransactionDetailsView = require('../../Wallets/Views/TransactionDetailsView.web')
SendFundsTab/Views/SendFundsView.Lite.web.js:const SendFundsView_Base = require('./SendFundsView_Base.web')
SendFundsTab/Views/SendFundsView.Lite.web.js:const commonComponents_contactPicker_Lite = require('../../MMAppUICommonComponents/contactPicker.Lite.web')
SendFundsTab/Views/SendFundsView.Lite.web.js:	// Overrides - Required
SendFundsTab/Views/SendFundsView.Lite.web.js:	_new_required_contactPickerLayer()
SendFundsTab/Views/SendFundsView_Base.web.js:const View = require('../../Views/View.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_amounts = require('../../MMAppUICommonComponents/amounts.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_tooltips = require('../../MMAppUICommonComponents/tooltips.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const WalletsSelectView = require('../../WalletsList/Views/WalletsSelectView.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const JustSentTransactionDetailsView = require('./JustSentTransactionDetailsView.web')
SendFundsTab/Views/SendFundsView_Base.web.js:const monero_sendingFunds_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_sendingFunds_utils')
SendFundsTab/Views/SendFundsView_Base.web.js:const monero_openalias_utils = require('../../OpenAlias/monero_openalias_utils')
SendFundsTab/Views/SendFundsView_Base.web.js:const monero_paymentID_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_paymentID_utils')
SendFundsTab/Views/SendFundsView_Base.web.js:const monero_config = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
SendFundsTab/Views/SendFundsView_Base.web.js:const monero_amount_format_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils')
SendFundsTab/Views/SendFundsView_Base.web.js:const jsQR = require('jsqr')
SendFundsTab/Views/SendFundsView_Base.web.js:const monero_requestURI_utils = require('../../MoneroUtils/monero_requestURI_utils')
SendFundsTab/Views/SendFundsView_Base.web.js:let Currencies = require('../../CcyConversionRates/Currencies')
SendFundsTab/Views/SendFundsView_Base.web.js:let JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger // important: grab defined export
SendFundsTab/Views/SendFundsView_Base.web.js:		}, 10) // this is really lame but to fix it requires a good method to be notified of the moment self gets put into the nav bar…… I'll also place in VDA for good measure
SendFundsTab/Views/SendFundsView_Base.web.js:	_new_required_contactPickerLayer()
SendFundsTab/Views/SendFundsView_Base.web.js:		const layer = self._new_required_contactPickerLayer()
SendFundsTab/Views/SendFundsView_Base.web.js:		{ // Tear down components that require us to call their TearDown
SendFundsTab/Views/SendFundsView_Base.web.js:						// must be sure to save state so alert is now not required until a DeleteEverything
SendFundsTab/Views/SendFundsView_Base.web.js:				throw self.constructor.name + " requires self.wallet to " + _cmd
SendFundsTab/Views/SendFundsView_Base.web.js:				throw self.constructor.name + " requires transaction to " + _cmd
SendFundsTab/Views/SendFundsView_Base.web.js:			throw self.constructor.name + " requires navigationController to " + _cmd
SendFundsTab/Views/SendFundsView.Full.web.js:const SendFundsView_Base = require('./SendFundsView_Base.web')
SendFundsTab/Views/SendFundsView.Full.web.js:const commonComponents_contactPicker = require('../../MMAppUICommonComponents/contactPicker.web')
SendFundsTab/Views/SendFundsView.Full.web.js:const monero_requestURI_utils = require('../../MoneroUtils/monero_requestURI_utils')
SendFundsTab/Views/SendFundsView.Full.web.js:const AddContactFromSendTabView = require('../../Contacts/Views/AddContactFromSendTabView.web')
SendFundsTab/Views/SendFundsView.Full.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
SendFundsTab/Views/SendFundsView.Full.web.js:	// Overrides - Required - Setup - Accessors
SendFundsTab/Views/SendFundsView.Full.web.js:	_new_required_contactPickerLayer()
SendFundsTab/Views/SendTabContentView.Lite.web.js:const SendTabContentView_Base = require('./SendTabContentView_Base.web')
SendFundsTab/Views/SendTabContentView.Lite.web.js:	_required_rootViewClassModule()
SendFundsTab/Views/SendTabContentView.Lite.web.js:		return require('./SendFundsView.Lite.web')
Settings/Controllers/SettingsController.js:const async = require('async')
Settings/Controllers/SettingsController.js:const EventEmitter = require('events')
Settings/Controllers/SettingsController.js:const uuidV1 = require('uuid/v1')
Settings/Controllers/SettingsController.js:let Currencies = require('../../CcyConversionRates/Currencies')
Settings/Controllers/SettingsController.js:	authentication_requireWhenSending: true,
Settings/Controllers/SettingsController.js:	authentication_requireWhenDisclosingWalletSecrets: true,
Settings/Controllers/SettingsController.js:			if (typeof record_doc.authentication_requireWhenSending === 'undefined' || record_doc.authentication_requireWhenSending == null) {
Settings/Controllers/SettingsController.js:				self.authentication_requireWhenSending = k_defaults_record.authentication_requireWhenSending
Settings/Controllers/SettingsController.js:				self.authentication_requireWhenSending = record_doc.authentication_requireWhenSending 
Settings/Controllers/SettingsController.js:			if (typeof record_doc.authentication_requireWhenDisclosingWalletSecrets === 'undefined' || record_doc.authentication_requireWhenDisclosingWalletSecrets == null) {
Settings/Controllers/SettingsController.js:				self.authentication_requireWhenDisclosingWalletSecrets = k_defaults_record.authentication_requireWhenDisclosingWalletSecrets
Settings/Controllers/SettingsController.js:				self.authentication_requireWhenDisclosingWalletSecrets = record_doc.authentication_requireWhenDisclosingWalletSecrets 
Settings/Controllers/SettingsController.js:	EventName_settingsChanged_authentication_requireWhenSending()
Settings/Controllers/SettingsController.js:		return "EventName_settingsChanged_authentication_requireWhenSending"
Settings/Controllers/SettingsController.js:	EventName_settingsChanged_authentication_requireWhenDisclosingWalletSecrets()
Settings/Controllers/SettingsController.js:		return "EventName_settingsChanged_authentication_requireWhenDisclosingWalletSecrets"
Settings/Controllers/SettingsController.js:				var didUpdate_authentication_requireWhenSending = false
Settings/Controllers/SettingsController.js:				var didUpdate_authentication_requireWhenDisclosingWalletSecrets = false
Settings/Controllers/SettingsController.js:						} else if (valueKey === "authentication_requireWhenSending") {
Settings/Controllers/SettingsController.js:							didUpdate_authentication_requireWhenSending = true
Settings/Controllers/SettingsController.js:						} else if (valueKey === "authentication_requireWhenDisclosingWalletSecrets") {
Settings/Controllers/SettingsController.js:							didUpdate_authentication_requireWhenDisclosingWalletSecrets = true
Settings/Controllers/SettingsController.js:							if (didUpdate_authentication_requireWhenSending) {
Settings/Controllers/SettingsController.js:									self.EventName_settingsChanged_authentication_requireWhenSending(), 
Settings/Controllers/SettingsController.js:									self.authentication_requireWhenSending
Settings/Controllers/SettingsController.js:							if (didUpdate_authentication_requireWhenDisclosingWalletSecrets) {
Settings/Controllers/SettingsController.js:									self.EventName_settingsChanged_authentication_requireWhenDisclosingWalletSecrets(), 
Settings/Controllers/SettingsController.js:									self.authentication_requireWhenDisclosingWalletSecrets
Settings/Controllers/SettingsController.js:					authentication_requireWhenSending: self.authentication_requireWhenSending,
Settings/Controllers/SettingsController.js:					authentication_requireWhenDisclosingWalletSecrets: self.authentication_requireWhenDisclosingWalletSecrets,
Settings/Views/SettingsTabContentView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Settings/Views/SettingsTabContentView.web.js:			const SettingsView = require('./SettingsView.web')
Settings/Views/SettingsView.web.js:const View = require('../../Views/View.web')
Settings/Views/SettingsView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Settings/Views/SettingsView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Settings/Views/SettingsView.web.js:const commonComponents_labeledRangeInputs = require('../../MMAppUICommonComponents/labeledRangeInputs.web')
Settings/Views/SettingsView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Settings/Views/SettingsView.web.js:const commonComponents_switchToggles = require('../../MMAppUICommonComponents/switchToggles.web')
Settings/Views/SettingsView.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
Settings/Views/SettingsView.web.js:const commonComponents_ccySelect = require('../../MMAppUICommonComponents/ccySelect.web')
Settings/Views/SettingsView.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
Settings/Views/SettingsView.web.js:const commonComponents_tooltips = require('../../MMAppUICommonComponents/tooltips.web')
Settings/Views/SettingsView.web.js:const config__MyMonero = require('../../HostedMoneroAPIClient/config__MyMonero')
Settings/Views/SettingsView.web.js:				const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Settings/Views/SettingsView.web.js:				const ModalStandaloneAboutView = require('../../AboutWindow/Views/ModalStandaloneAboutView.web')
Settings/Views/SettingsView.web.js:								authentication_requireWhenSending: isChecked
Settings/Views/SettingsView.web.js:				self.requireWhenSending_switchView = switchView
Settings/Views/SettingsView.web.js:								authentication_requireWhenDisclosingWalletSecrets: isChecked
Settings/Views/SettingsView.web.js:				self.requireWhenDisclosingWalletSecrets_switchView = switchView
Settings/Views/SettingsView.web.js:					self.appTimeoutSlider_messageLayer.innerHTML = "Idle time before your " + passwordType_humanReadableString + " is required"
Settings/Views/SettingsView.web.js:				self.requireWhenSending_switchView.SetEnabled(false) // cannot have them turn it off w/o pw because it should require a pw to de-escalate security measure
Settings/Views/SettingsView.web.js:				self.requireWhenDisclosingWalletSecrets_switchView.SetEnabled(false) // cannot have them turn it off w/o pw because it should require a pw to de-escalate security measure
Settings/Views/SettingsView.web.js:				self.requireWhenSending_switchView.SetEnabled(false) // "
Settings/Views/SettingsView.web.js:				self.requireWhenDisclosingWalletSecrets_switchView.SetEnabled(false) // "
Settings/Views/SettingsView.web.js:				self.requireWhenSending_switchView.SetEnabled(true)
Settings/Views/SettingsView.web.js:				self.requireWhenDisclosingWalletSecrets_switchView.SetEnabled(true)
Settings/Views/SettingsView.web.js:			self.requireWhenSending_switchView.setChecked(
Settings/Views/SettingsView.web.js:				self.context.settingsController.authentication_requireWhenSending,
Settings/Views/SettingsView.web.js:			self.requireWhenDisclosingWalletSecrets_switchView.setChecked(
Settings/Views/SettingsView.web.js:				self.context.settingsController.authentication_requireWhenDisclosingWalletSecrets,
StackNavigation/Views/NavigationBarView.web.js:const Animate = require('velocity-animate')
StackNavigation/Views/NavigationBarView.web.js:const View = require('../../Views/View.web')
StackNavigation/Views/NavigationBarView.web.js:const BarButtonBaseView = require('./BarButtonBaseView.web')
StackNavigation/Views/NavigationBarView.web.js:const emoji_web = require('../../Emoji/emoji_web')
StackNavigation/Views/NavigationBarView.web.js:const Views__cssRules = require('../../Views/cssRules.web')
StackNavigation/Views/StackNavigationView.web.js:const uuidV1 = require('uuid/v1')
StackNavigation/Views/StackNavigationView.web.js:const Animate = require('velocity-animate')
StackNavigation/Views/StackNavigationView.web.js:const View = require('../../Views/View.web')
StackNavigation/Views/StackNavigationView.web.js:			const NavigationBarView = require('./NavigationBarView.web')
StackNavigation/Views/BarButtonBaseView.web.js:const View = require('../../Views/View.web')
StackNavigation/Views/StackAndModalNavigationView.web.js:const Animate = require('velocity-animate')
StackNavigation/Views/StackAndModalNavigationView.web.js:const StackNavigationView = require('./StackNavigationView.web')
StackNavigation/Views/StackAndModalNavigationView.web.js:			// throw self.constructor.name + " DismissModalViewsToView requires there to be a modal view"
TabBarView/TabBarAndContentView.web.js:const View = require('../Views/View.web')
TabBarView/TabBarAndContentView.web.js:const TabBarItemButtonView = require('./TabBarItemButtonView.web')
TabBarView/TabBarItemButtonView.web.js:const View = require('../Views/View.web')
TabBarView/TabBarItemButtonView.web.js:				throw `${self.constructor.name} requires options.numberOf_tabs`
Theme/ThemeController.js:const commonComponents_navigationBarButtons = require('../MMAppUICommonComponents/navigationBarButtons.web')
Theme/ThemeController.js:const Views__cssRules = require('../Views/cssRules.web')
URLBrowser/URLBrowser.browser.js:const URLBrowser_Abstract = require('./URLBrowser_Abstract')
URLBrowser/URLBrowser.electron.js:const URLBrowser_Abstract = require('./URLBrowser_Abstract')
URLBrowser/URLBrowser.electron.js:const shell = require('electron').shell
URLOpening/URLOpeningCoordinator.web.js:const EventEmitter = require('events')
URLOpening/URLOpeningController.electron.js:const URLOpeningController_Abstract = require('./URLOpeningController_Abstract')
URLOpening/URLOpeningController.electron.js:			const {dialog} = require('electron')
URLOpening/URLOpeningController_Abstract.js:const EventEmitter = require('events')
UserIdle/UserIdleInWindowController.js:const EventEmitter = require('events')
Views/View.web.js:const EventEmitter = require('events')
Views/View.web.js:const uuidV1 = require('uuid/v1')
Views/View.web.js:const web_debug_utils = require('./web_debug_utils')	
WalletAppCoordinator/WalletAppCoordinator.js:const EventEmitter = require('events')
WalletWizard/Controllers/AddWallet_WizardController.web.js:const mnemonic_languages = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/mnemonic_languages')
WalletWizard/Controllers/AddWallet_WizardController.web.js:	"PickCreateOrUseExisting_Landing_View.web": require("../Views/PickCreateOrUseExisting_Landing_View.web"),
WalletWizard/Controllers/AddWallet_WizardController.web.js:	"UseExisting_MetaInfo_View.web": 			require("../Views/UseExisting_MetaInfo_View.web"),
WalletWizard/Controllers/AddWallet_WizardController.web.js:	"CreateWallet_MetaInfo_View.web": 			require("../Views/CreateWallet_MetaInfo_View.web"),
WalletWizard/Controllers/AddWallet_WizardController.web.js:	"CreateWallet_Instructions_View.web": 		require("../Views/CreateWallet_Instructions_View.web"),
WalletWizard/Controllers/AddWallet_WizardController.web.js:	"CreateWallet_InformOfMnemonic_View.web": 	require("../Views/CreateWallet_InformOfMnemonic_View.web"),
WalletWizard/Controllers/AddWallet_WizardController.web.js:	"CreateWallet_ConfirmMnemonic_View.web": 	require("../Views/CreateWallet_ConfirmMnemonic_View.web")
WalletWizard/Controllers/AddWallet_WizardController.web.js:		const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
WalletWizard/Views/BaseView_AWalletWizardScreen.web.js:const View = require('../../Views/View.web')
WalletWizard/Views/BaseView_AWalletWizardScreen.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/BaseView_AWalletWizardScreen.web.js:				throw self.constructor.name + " requires a self.wizardController"
WalletWizard/Views/CreateWallet_Instructions_View.web.js:const View = require('../../Views/View.web')
WalletWizard/Views/CreateWallet_Instructions_View.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/CreateWallet_Instructions_View.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/CreateWallet_Instructions_View.web.js:const BaseView_AWalletWizardScreen = require('./BaseView_AWalletWizardScreen.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const View = require('../../Views/View.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const commonComponents_tooltips = require('../../MMAppUICommonComponents/tooltips.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
WalletWizard/Views/UseExisting_MetaInfo_View.web.js:const BaseView_Wallet_MetaInfo = require('./BaseView_Wallet_MetaInfo.web')
WalletWizard/Views/BaseView_Wallet_MetaInfo.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/BaseView_Wallet_MetaInfo.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/BaseView_Wallet_MetaInfo.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
WalletWizard/Views/BaseView_Wallet_MetaInfo.web.js:const commonComponents_walletColorPicker = require('../../MMAppUICommonComponents/walletColorPicker.web')
WalletWizard/Views/BaseView_Wallet_MetaInfo.web.js:const BaseView_AWalletWizardScreen = require('./BaseView_AWalletWizardScreen.web')
WalletWizard/Views/PickCreateOrUseExisting_Landing_View.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/PickCreateOrUseExisting_Landing_View.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/PickCreateOrUseExisting_Landing_View.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
WalletWizard/Views/PickCreateOrUseExisting_Landing_View.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
WalletWizard/Views/PickCreateOrUseExisting_Landing_View.web.js:const BaseView_AWalletWizardScreen = require('./BaseView_AWalletWizardScreen.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const commonComponents_walletMnemonicBox = require('../../MMAppUICommonComponents/walletMnemonicBox.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:const BaseView_AWalletWizardScreen = require('./BaseView_AWalletWizardScreen.web')
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:			commonComponents_walletMnemonicBox.numberOfMnemonicWordsRequiredForVerification
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:		) // NOTE: we are limiting the required-entered words to 7
WalletWizard/Views/CreateWallet_ConfirmMnemonic_View.web.js:			commonComponents_walletMnemonicBox.numberOfMnemonicWordsRequiredForVerification
WalletWizard/Views/CreateWallet_InformOfMnemonic_View.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/CreateWallet_InformOfMnemonic_View.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/CreateWallet_InformOfMnemonic_View.web.js:const commonComponents_walletMnemonicBox = require('../../MMAppUICommonComponents/walletMnemonicBox.web')
WalletWizard/Views/CreateWallet_InformOfMnemonic_View.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
WalletWizard/Views/CreateWallet_InformOfMnemonic_View.web.js:const mnemonic_languages = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/mnemonic_languages')
WalletWizard/Views/CreateWallet_InformOfMnemonic_View.web.js:const BaseView_AWalletWizardScreen = require('./BaseView_AWalletWizardScreen.web')
WalletWizard/Views/CreateWallet_MetaInfo_View.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
WalletWizard/Views/CreateWallet_MetaInfo_View.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletWizard/Views/CreateWallet_MetaInfo_View.web.js:const BaseView_Wallet_MetaInfo = require('./BaseView_Wallet_MetaInfo.web')
Wallets/Models/wallet_persistence_utils.js:const persistable_object_utils = require('../../DocumentPersister/persistable_object_utils')
Wallets/Models/wallet_persistence_utils.js:const JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger
Wallets/Models/Wallet.js:const async = require('async')
Wallets/Models/Wallet.js:const EventEmitter = require('events')
Wallets/Models/Wallet.js:const extend = require('util')._extend
Wallets/Models/Wallet.js:const uuidV1 = require('uuid/v1')
Wallets/Models/Wallet.js:const monero_txParsing_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_txParsing_utils')
Wallets/Models/Wallet.js:const monero_sendingFunds_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_sendingFunds_utils')
Wallets/Models/Wallet.js:const JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger
Wallets/Models/Wallet.js:const monero_amount_format_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils')
Wallets/Models/Wallet.js:const monero_config = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
Wallets/Models/Wallet.js:const mnemonic_languages = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/mnemonic_languages')
Wallets/Models/Wallet.js:const persistable_object_utils = require('../../DocumentPersister/persistable_object_utils')
Wallets/Models/Wallet.js:const wallet_persistence_utils = require('./wallet_persistence_utils')
Wallets/Models/Wallet.js:const WalletHostPollingController = require('../Controllers/WalletHostPollingController')
Wallets/Models/Wallet.js:	{ // provided for convenience mainly so consumers don't have to require monero_utils
Wallets/Models/Wallet.js:	{ // provided for convenience mainly so consumers don't have to require monero_utils
Wallets/Models/Wallet.js:	{ // provided for convenience mainly so consumers don't have to require monero_utils
Wallets/Models/Wallet.js:			requireAuthentication: self.context.settingsController.authentication_requireWhenSending != false,
Wallets/Models/Wallet.js:						monero_amount_format_utils.formatMoney(new JSBigInt(""+params.required_balance))
Wallets/Controllers/WalletHostPollingController.js:const EventEmitter = require('events')
Wallets/Views/WalletDetailsView.web.js:const monero_config = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_config')
Wallets/Views/WalletDetailsView.web.js:const JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger
Wallets/Views/WalletDetailsView.web.js:const View = require('../../Views/View.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
Wallets/Views/WalletDetailsView.web.js:const commonComponents_activityIndicators = require('../../MMAppUICommonComponents/activityIndicators.web')
Wallets/Views/WalletDetailsView.web.js:const InfoDisclosingView = require('../../InfoDisclosingView/Views/InfoDisclosingView.web')
Wallets/Views/WalletDetailsView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Wallets/Views/WalletDetailsView.web.js:const TransactionDetailsView = require("./TransactionDetailsView.web")
Wallets/Views/WalletDetailsView.web.js:const ImportTransactionsModalView = require('./ImportTransactionsModalView.web')
Wallets/Views/WalletDetailsView.web.js:const FundsRequestQRDisplayView = require('../../RequestFunds/Views/FundsRequestQRDisplayView.web')
Wallets/Views/WalletDetailsView.web.js:let Currencies = require('../../CcyConversionRates/Currencies')
Wallets/Views/WalletDetailsView.web.js:const monero_amount_format_utils = require("../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils");
Wallets/Views/WalletDetailsView.web.js:				throw "options.wallet nil but required for " + self.constructor.name
Wallets/Views/WalletDetailsView.web.js:					if (self.context.settingsController.authentication_requireWhenDisclosingWalletSecrets) {
Wallets/Views/WalletDetailsView.web.js:					const EditWalletView = require('./EditWalletView.web')
Wallets/Views/WalletDetailsView.web.js:					const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
Wallets/Views/WalletDetailsView.web.js:				throw self.constructor.name + " requires self.wallet to " + _cmd
Wallets/Views/WalletDetailsView.web.js:				throw self.constructor.name + " requires transaction to " + _cmd
Wallets/Views/WalletDetailsView.web.js:			throw self.constructor.name + " requires navigationController to " + _cmd
Wallets/Views/WalletCellContentsView.web.js:const View = require('../../Views/View.web')
Wallets/Views/WalletCellContentsView.web.js:const JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger
Wallets/Views/WalletCellContentsView.web.js:const commonComponents_walletIcons = require('../../MMAppUICommonComponents/walletIcons.web')
Wallets/Views/WalletCellContentsView.web.js:const commonComponents_hoverableCells = require('../../MMAppUICommonComponents/hoverableCells.web')
Wallets/Views/WalletCellContentsView.web.js:let Currencies = require('../../CcyConversionRates/Currencies')
Wallets/Views/WalletCellContentsView.web.js:let monero_amount_format_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils')
Wallets/Views/ImportTransactionsModalView.web.js:const View = require('../../Views/View.web')
Wallets/Views/ImportTransactionsModalView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Wallets/Views/ImportTransactionsModalView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Wallets/Views/ImportTransactionsModalView.web.js:const commonComponents_amounts = require('../../MMAppUICommonComponents/amounts.web')
Wallets/Views/ImportTransactionsModalView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Wallets/Views/ImportTransactionsModalView.web.js:const commonComponents_tooltips = require('../../MMAppUICommonComponents/tooltips.web')
Wallets/Views/ImportTransactionsModalView.web.js:const WalletsSelectView = require('../../WalletsList/Views/WalletsSelectView.web')
Wallets/Views/ImportTransactionsModalView.web.js:const monero_amount_format_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils')
Wallets/Views/ImportTransactionsModalView.web.js:const monero_sendingFunds_utils = require('../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_sendingFunds_utils')
Wallets/Views/ImportTransactionsModalView.web.js:			throw `${self.constructor.name} requires options.wallet`
Wallets/Views/ImportTransactionsModalView.web.js:			const labelLayer = commonComponents_forms.New_fieldTitle_labelLayer("PAYMENT ID (REQUIRED)", self.context)
Wallets/Views/ImportTransactionsModalView.web.js:						self.informationalHeaderLayer.innerHTML = `This requires a one-time import fee of ${raw_formattedMoney} XMR`
Wallets/Views/TransactionDetailsView.web.js:const View = require('../../Views/View.web')
Wallets/Views/TransactionDetailsView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Wallets/Views/TransactionDetailsView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Wallets/Views/TransactionDetailsView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Wallets/Views/TransactionDetailsView.web.js:const monero_amount_format_utils = require("../../mymonero_libapp_js/mymonero-core-js/monero_utils/monero_amount_format_utils");
Wallets/Views/TransactionDetailsView.web.js:const JSBigInt = require('../../mymonero_libapp_js/mymonero-core-js/cryptonote_utils/biginteger').BigInteger
Wallets/Views/TransactionDetailsView.web.js:				throw "options.transaction nil but required for " + self.constructor.name
Wallets/Views/TransactionDetailsView.web.js:				throw "options.wallet nil but required for " + self.constructor.name
Wallets/Views/EditWalletView.web.js:const View = require('../../Views/View.web')
Wallets/Views/EditWalletView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
Wallets/Views/EditWalletView.web.js:const commonComponents_forms = require('../../MMAppUICommonComponents/forms.web')
Wallets/Views/EditWalletView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
Wallets/Views/EditWalletView.web.js:const commonComponents_walletColorPicker = require('../../MMAppUICommonComponents/walletColorPicker.web')
Wallets/Views/EditWalletView.web.js:const emoji_selection = require('../../Emoji/emoji_selection')
Wallets/Views/EditWalletView.web.js:				throw self.constructor.name + " requires an options.wallet"
WalletsList/Controllers/WalletsListController_Base.js:const async = require('async')
WalletsList/Controllers/WalletsListController_Base.js:const ListBaseController = require('../../Lists/Controllers/ListBaseController')
WalletsList/Controllers/WalletsListController_Base.js:const Wallet = require('../../Wallets/Models/Wallet')
WalletsList/Controllers/WalletsListController_Base.js:const wallet_persistence_utils = require('../../Wallets/Models/wallet_persistence_utils')
WalletsList/Controllers/WalletsListController.Lite.js:const WalletsListController_Base = require('./WalletsListController_Base')
WalletsList/Controllers/WalletsListController.Full.js:const WalletsListController_Base = require('./WalletsListController_Base')
WalletsList/Views/WalletsTabContentView.web.js:const StackAndModalNavigationView = require('../../StackNavigation/Views/StackAndModalNavigationView.web')
WalletsList/Views/WalletsTabContentView.web.js:			const WalletsListView = require('./WalletsListView.web')
WalletsList/Views/WalletsListCellView.web.js:const ListCellView = require('../../Lists/Views/ListCellView.web')
WalletsList/Views/WalletsListCellView.web.js:const WalletCellContentsView = require('../../Wallets/Views/WalletCellContentsView.web')
WalletsList/Views/WalletsListCellView.web.js:const commonComponents_tables = require('../../MMAppUICommonComponents/tables.web')
WalletsList/Views/WalletsSelectView.web.js:const Views__cssRules = require('../../Views/cssRules.web')
WalletsList/Views/WalletsSelectView.web.js:const ListCustomSelectView = require('../../Lists/Views/ListCustomSelectView.web')
WalletsList/Views/WalletsSelectView.web.js:const WalletCellContentsView = require('../../Wallets/Views/WalletCellContentsView.web')
WalletsList/Views/WalletsSelectView.web.js:const commonComponents_walletIcons = require('../../MMAppUICommonComponents/walletIcons.web')
WalletsList/Views/WalletsListView.web.js:const View = require('../../Views/View.web')
WalletsList/Views/WalletsListView.web.js:const ListView = require('../../Lists/Views/ListView.web')
WalletsList/Views/WalletsListView.web.js:const commonComponents_navigationBarButtons = require('../../MMAppUICommonComponents/navigationBarButtons.web')
WalletsList/Views/WalletsListView.web.js:const commonComponents_emptyScreens = require('../../MMAppUICommonComponents/emptyScreens.web')
WalletsList/Views/WalletsListView.web.js:const commonComponents_actionButtons = require('../../MMAppUICommonComponents/actionButtons.web')
WalletsList/Views/WalletsListView.web.js:const WalletsListCellView = require('./WalletsListCellView.web')
WalletsList/Views/WalletsListView.web.js:const WalletDetailsView = require('../../Wallets/Views/WalletDetailsView.web')
WalletsList/Views/WalletsListView.web.js:const AddWallet_WizardController = require('../../WalletWizard/Controllers/AddWallet_WizardController.web')
WalletsList/Views/WalletsListView.web.js:		// NOTE: a possible better way to fix this, albeit one which would require placing a cb function on this overridable_willBuildUIWithRecords to retain serial execution, would be to actually fetch the number of saved records, rather than checking records.length – since `records` is the number of loaded/decrypted records
WindowDialogs/WindowDialogs.browser.js:const WindowDialogs_Abstract = require('./WindowDialogs_Abstract')
WindowDialogs/WindowDialogs.electron.js:const WindowDialogs_Abstract = require('./WindowDialogs_Abstract')
WindowDialogs/WindowDialogs.electron.js:		const remote = require('electron').remote
runtime_context/runtime_context.js://		 module: require("../raw_objects/raw_row_objects"),
runtime_context/runtime_context.js:		var module = description_module || require("" + module_path)
runtime_context/runtime_context.js:			console.error("Unable to require " + description.module_path + ". Skipping.")
symmetric_cryptor/BackgroundStringCryptor.electron.js:const BackgroundTaskExecutor = require('../Concurrency/BackgroundTaskExecutor.electron')
symmetric_cryptor/BackgroundStringCryptor.electron.js:		const electron = require('electron')
symmetric_cryptor/BackgroundStringCryptor.electron.child.js:const string_cryptor = require('./symmetric_string_cryptor')
symmetric_cryptor/BackgroundStringCryptor.electron.child.js:const child_ipc = require('../Concurrency/ipc.electron.child')
symmetric_cryptor/BackgroundStringCryptor.electron.child.js:	throw "BackgroundStringCryptor.electron.child.js requires argv[2] reporting_appVersion"
symmetric_cryptor/BackgroundStringCryptor.interfaceForTests.js:const string_cryptor = require('./symmetric_string_cryptor')
symmetric_cryptor/symmetric_string_cryptor.js:var crypto = require('crypto');
